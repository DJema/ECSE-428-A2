!SESSION 2019-02-28 20:07:30.013 -----------------------------------------------
eclipse.buildId=4.7.3.M20180330-0640
java.version=1.8.0_171
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.modeling.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.modeling.product

This is a continuation of log file C:\Users\Rami\Desktop\ECSE428\.metadata\.bak_1.log
Created Time: 2019-02-28 21:08:50.141

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:50.146
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and o
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6172
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:50.362
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and ob
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6173
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:51.099
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and obj
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6174
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:51.171
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and obje
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6175
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:51.251
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and objec
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6176
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 21:08:51.459
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		//driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and object
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 6177
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:12:53.563
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void anErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	public void emailWasSentWithNoObject() {
		assertTrue(driver.getPageSource().contains("no subject"));
	}
	
	//@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and object
	//@Test
	public void normalFlowTest2() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddADifferentRecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddADifferentAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	//@Test
	public void alternateFlowTest() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		andIAcceptThePromptWindow();
		
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSentWithNoObject();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	@Test
	public void errorFlow1() throws Exception{
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		then
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 9821
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:13:01.962
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void anErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	public void emailWasSentWithNoObject() {
		assertTrue(driver.getPageSource().contains("no subject"));
	}
	
	//@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and object
	//@Test
	public void normalFlowTest2() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddADifferentRecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddADifferentAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	//@Test
	public void alternateFlowTest() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		andIAcceptThePromptWindow();
		
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSentWithNoObject();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	@Test
	public void errorFlow1() throws Exception{
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenThe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 9824
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:13:25.291
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(4);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	public static void initializeDriver() {
		System.setProperty("webdriver.chrome.driver", PATH_TO_WEBDRIVER);
		driver = new ChromeDriver();
	}
	
	public void systemInInitialState() {
		
        // Email not yet received
		assertFalse(driver.getPageSource().contains(objectToSend));
		
		// Check that I am logged in and on the Gmail home page
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
	} 
	
	public void systemReturnedToInitialState(){
		
		// Check that I am still logged in and the system is back to its initial state
		assertTrue(driver.getPageSource().contains("Bob"));
		assertTrue(driver.getPageSource().contains("Social"));
		assertTrue(driver.getPageSource().contains("Promotions"));
		
		driver.close();
	}
	
	public void emailWasSent() {
		assertTrue(driver.getPageSource().contains(objectToSend));
	}
	
	public void emailWasSentWithNoObject() {
		assertTrue(driver.getPageSource().contains("no subject"));
	}
	
	//@Test
	public void normalFlowTest1() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	// Send email with a different recipient, attachment and object
	//@Test
	public void normalFlowTest2() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddADifferentRecipientToMyMessage();
		andIAddASubjectToMyMessage();
		andIAddADifferentAttachmentToMyMessage();
		andIclickSend();
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSent();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	//@Test
	public void alternateFlowTest() throws Exception {
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddARecipientToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		andIAcceptThePromptWindow();
		
		thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment();
		
		// Check that the recipient gets the email
		emailWasSentWithNoObject();

		// Check that the system returned to its initial state
		systemReturnedToInitialState();
		
	}
	
	@Test
	public void errorFlow1() throws Exception{
		
		givenIAmLoggedInToMyGmailOnMyHomepage();
		
		// Check that the system is in its initial state
		systemInInitialState();
		
		whenIClickOnCompose();
		andIAddASubjectToMyMessage();
		andIAddAnAttachmentToMyMessage();
		andIclickSend();
		thenAn
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 9827
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:04.590
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:04.600
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:05.213
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void then
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7481
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:05.223
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void then
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7481
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:05.765
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thena
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:05.774
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thena
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.045
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void then
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7481
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.053
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void then
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7481
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.189
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.197
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7482
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.469
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAn
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7483
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.478
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAn
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7483
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.741
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnE
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7484
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.749
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnE
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7484
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.957
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnEr
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7485
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:06.965
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnEr
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7485
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.125
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErr
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7486
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.134
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErr
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7486
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.205
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErro
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7487
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.213
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErro
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7487
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.317
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnError
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7488
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.325
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnError
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7488
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.469
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorM
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7489
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.477
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorM
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7489
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.653
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7490
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.661
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7490
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.861
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMes
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7491
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.869
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMes
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7491
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.989
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMess
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7492
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:07.999
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMess
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7492
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.094
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7493
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.102
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7493
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.270
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessag
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7494
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.278
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessag
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7494
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.374
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessage
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7495
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.383
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessage
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7495
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.645
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageI
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7496
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:08.653
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageI
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7496
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.005
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7497
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.013
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7497
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.293
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsD
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7498
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.301
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsD
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7498
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.613
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7499
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.622
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7499
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.934
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsD
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7498
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:09.941
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsD
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7498
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.190
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDi
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7499
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.199
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDi
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7499
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.246
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDis
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7500
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.253
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDis
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7500
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.374
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisp
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7501
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.381
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisp
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7501
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.421
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDispl
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7502
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.428
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDispl
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7502
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.478
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDispla
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7503
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.485
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDispla
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7503
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.677
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplay
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7504
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.685
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplay
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7504
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.718
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplaye
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7505
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.727
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplaye
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7505
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.805
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayed
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7506
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:10.813
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayed
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7506
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.037
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedS
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7507
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.045
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedS
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7507
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.229
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSp
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7508
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.237
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSp
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7508
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.301
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7509
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.309
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7509
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.870
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpec
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7510
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:11.877
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpec
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7510
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:12.389
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpeci
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7511
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:12.397
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpeci
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7511
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.318
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecif
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7512
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.325
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecif
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7512
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

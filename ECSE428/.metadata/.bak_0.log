!SESSION 2019-02-28 20:07:30.013 -----------------------------------------------
eclipse.buildId=4.7.3.M20180330-0640
java.version=1.8.0_171
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.modeling.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.modeling.product

This is a continuation of log file C:\Users\Rami\Desktop\ECSE428\.metadata\.bak_2.log
Created Time: 2019-02-28 23:24:14.455

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.463
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecify
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7513
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.475
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecify
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7513
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.950
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyi
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7514
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:14.958
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyi
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7514
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.061
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyin
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7515
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.069
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyin
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7515
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.102
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifying
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7516
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.109
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifying
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7516
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.366
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingT
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7517
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.374
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingT
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7517
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.518
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTh
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7518
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.526
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTh
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7518
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.622
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingThe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7519
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:15.629
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingThe
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7519
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.038
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7520
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.045
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheA
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7520
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.318
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAt
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7521
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.327
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAt
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7521
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.469
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAtt
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7522
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.477
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAtt
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7522
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.526
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAtta
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7523
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.535
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAtta
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7523
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.702
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttac
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7524
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.709
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttac
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7524
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.837
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttach
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7525
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:16.845
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttach
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7525
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.062
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachm
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7526
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.069
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachm
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7526
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.118
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachme
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7527
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.125
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachme
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7527
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.253
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmen
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7528
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.261
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmen
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7528
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.310
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachment
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7529
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.318
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachment
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7529
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.534
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentI
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7530
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.541
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentI
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7530
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.742
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7531
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.749
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIs
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7531
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.974
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsT
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7532
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:17.982
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsT
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7532
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.166
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTo
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7533
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.174
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTo
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7533
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.326
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsToo
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7534
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.338
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsToo
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7534
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.541
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooL
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7535
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.549
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooL
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7535
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.734
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7536
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.742
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7536
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.815
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLar
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7537
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:18.827
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLar
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7537
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.013
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarg
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7538
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.021
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarg
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7538
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.054
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7539
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.061
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7539
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.514
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge(
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7540
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.524
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge(
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7540
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.809
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:19.817
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:20.775
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {{
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7544
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:20.782
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {{
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7544
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:21.119
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:21.127
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:22.384
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {}
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7544
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:22.393
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {}
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7544
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:22.900
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:24:22.908
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() {
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7543
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:03.358
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7772
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant$AutoAssistListener$1.run(ContentAssistant.java:377)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:03.799
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.c
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7773
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:03.918
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.cl
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7774
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:04.101
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.clo
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7775
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:04.629
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.clos
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7776
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:04.837
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.close
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7777
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:05.057
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.close(
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7778
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-02-28 23:28:05.451
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate a string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^And I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("egg.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I add a different attachment to my message$)
	public static void andIAddADifferentAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@And(^And I click Send$)
	public static void andIclickSend() {
		
		WebElement sendButton = driver.findElement(By.xpath("//div[text()='Send']"));
		sendButton.click();
		
	}
	
	//@Then(^Then the recipient receives the message with the right object and attachment$)
	public static void thenTheRecipientReceivesTheMessageWithTheRightObjectAndAttachment() {
		
		// Navigate to sent messages
		WebElement sentEmails = driver.findElement(By.xpath("//*[@class='TN bzz aHS-bnu']"));
		sentEmails.click();
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.xpath("//div[text()='To: ']"))));
		
	}
	
	//@And(^And I accept the prompt window$)
	public static void andIAcceptThePromptWindow() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
	}
	
	//@Then(^an error message is displayed specifying to add a recipient$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingToAddARecipient() throws InterruptedException, AWTException {
		
		// Press enter to accept the prompt window
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
	}
	
	//@And(^I add a large attachment to my message$)
	public static void andIAddALargeAttachmentToMyMessage() throws InterruptedException, AWTException {
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		TimeUnit.SECONDS.sleep(3);
		
		File image = new File("dog.jpg");
		
		StringSelection ss = new StringSelection(image.getAbsolutePath());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);
		
		
		// Copy paste the path into the file location box
		Robot robot = new Robot();

		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_V);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
	}
	
	//@Then(^Then an error message is displayed specifying the attachment is too large$)
	public static void thenAnErrorMessageIsDisplayedSpecifyingTheAttachmentIsTooLarge() throws InterruptedException, AWTException {
		
		TimeUnit.SECONDS.sleep(2);
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_ENTER);
		robot.keyRelease(KeyEvent.VK_ENTER);
		TimeUnit.SECONDS.sleep(2);
		
		driver.close();
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 7780
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
!SESSION 2019-03-01 10:28:41.629 -----------------------------------------------
eclipse.buildId=4.7.3.M20180330-0640
java.version=1.8.0_171
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_CA
Framework arguments:  -product org.eclipse.epp.package.modeling.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.modeling.product

!ENTRY org.eclipse.recommenders.apidocs.rcp 4 0 2019-03-01 10:28:55.706
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.recommenders.apidocs.rcp [864]
  Unresolved requirement: Require-Bundle: org.eclipse.recommenders.models.rcp; bundle-version="2.0.0"
    -> Bundle-SymbolicName: org.eclipse.recommenders.models.rcp; bundle-version="2.1.12.v20150212-1812"; singleton:="true"
       org.eclipse.recommenders.models.rcp [874]
         Unresolved requirement: Require-Bundle: org.eclipse.recommenders.models; bundle-version="2.0.0"
           -> Bundle-SymbolicName: org.eclipse.recommenders.models; bundle-version="2.1.12.v20150212-1812"
              org.eclipse.recommenders.models [873]
                Unresolved requirement: Import-Package: org.eclipse.aether.transport.http; version="[1.0.0,1.1.0)"
                  -> Export-Package: org.eclipse.aether.transport.http; bundle-symbolic-name="org.eclipse.aether.transport.http"; bundle-version="1.0.1.v20141111"; version="1.0.1.v20141111"; uses:="javax.inject,org.eclipse.aether,org.eclipse.aether.repository,org.eclipse.aether.spi.connector.transport,org.eclipse.aether.spi.locator,org.eclipse.aether.spi.log,org.eclipse.aether.transfer"
                     org.eclipse.aether.transport.http [96]
                       No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.eclipse.recommenders.models; bundle-version="2.0.0"
    -> Bundle-SymbolicName: org.eclipse.recommenders.models; bundle-version="2.1.12.v20150212-1812"
  Unresolved requirement: Require-Bundle: org.eclipse.recommenders.apidocs; bundle-version="2.0.0"
    -> Bundle-SymbolicName: org.eclipse.recommenders.apidocs; bundle-version="2.1.12.v20150212-1812"
       org.eclipse.recommenders.apidocs [863]
         Unresolved requirement: Require-Bundle: org.eclipse.recommenders.models
           -> Bundle-SymbolicName: org.eclipse.recommenders.models; bundle-version="2.1.12.v20150212-1812"
  Unresolved requirement: Require-Bundle: org.eclipse.recommenders.calls; bundle-version="2.0.0"
    -> Bundle-SymbolicName: org.eclipse.recommenders.calls; bundle-version="2.1.12.v20150212-1812"
       org.eclipse.recommenders.calls [865]
         Unresolved requirement: Require-Bundle: org.eclipse.recommenders.models; bundle-version="2.0.0"
           -> Bundle-SymbolicName: org.eclipse.recommenders.models; bundle-version="2.1.12.v20150212-1812"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"] because it is exposed to package 'org.apache.http' from resources org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.3.3.v201411290715"; osgi.identity="org.apache.httpcomponents.httpcore"] and org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.4.6.v20170210-0925"; osgi.identity="org.apache.httpcomponents.httpcore"] via two dependency chains.

Chain 1:
  org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"]
    import: (&(osgi.wiring.package=org.apache.http)(&(version>=4.2.1)(!(version>=4.4.0))))
     |
    export: osgi.wiring.package: org.apache.http
  org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.3.3.v201411290715"; osgi.identity="org.apache.httpcomponents.httpcore"]

Chain 2:
  org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"]
    import: (&(osgi.wiring.package=org.apache.http.auth)(&(version>=4.2.1)(!(version>=4.4.0))))
     |
    export: osgi.wiring.package=org.apache.http.auth; uses:=org.apache.http.protocol
  org.apache.httpcomponents.httpclient [osgi.identity; type="osgi.bundle"; version:Version="4.3.6.v201411290715"; osgi.identity="org.apache.httpcomponents.httpclient"]
    import: (&(osgi.wiring.package=org.apache.http.protocol)(version>=4.3.3))
     |
    export: osgi.wiring.package: org.apache.http.protocol; uses:=org.apache.http
    export: osgi.wiring.package=org.apache.http
  org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.4.6.v20170210-0925"; osgi.identity="org.apache.httpcomponents.httpcore"]
	at org.eclipse.osgi.container.Module.start(Module.java:444)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1634)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1613)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1585)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1528)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.recommenders.models 4 0 2019-03-01 10:28:55.738
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.eclipse.recommenders.models [873]
  Unresolved requirement: Import-Package: org.eclipse.aether.transport.http; version="[1.0.0,1.1.0)"
    -> Export-Package: org.eclipse.aether.transport.http; bundle-symbolic-name="org.eclipse.aether.transport.http"; bundle-version="1.0.1.v20141111"; version="1.0.1.v20141111"; uses:="javax.inject,org.eclipse.aether,org.eclipse.aether.repository,org.eclipse.aether.spi.connector.transport,org.eclipse.aether.spi.locator,org.eclipse.aether.spi.log,org.eclipse.aether.transfer"
       org.eclipse.aether.transport.http [96]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"] because it is exposed to package 'org.apache.http' from resources org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.3.3.v201411290715"; osgi.identity="org.apache.httpcomponents.httpcore"] and org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.4.6.v20170210-0925"; osgi.identity="org.apache.httpcomponents.httpcore"] via two dependency chains.

Chain 1:
  org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"]
    import: (&(osgi.wiring.package=org.apache.http)(&(version>=4.2.1)(!(version>=4.4.0))))
     |
    export: osgi.wiring.package: org.apache.http
  org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.3.3.v201411290715"; osgi.identity="org.apache.httpcomponents.httpcore"]

Chain 2:
  org.eclipse.aether.transport.http [osgi.identity; type="osgi.bundle"; version:Version="1.0.1.v20141111"; osgi.identity="org.eclipse.aether.transport.http"]
    import: (&(osgi.wiring.package=org.apache.http.auth)(&(version>=4.2.1)(!(version>=4.4.0))))
     |
    export: osgi.wiring.package=org.apache.http.auth; uses:=org.apache.http.protocol
  org.apache.httpcomponents.httpclient [osgi.identity; type="osgi.bundle"; version:Version="4.3.6.v201411290715"; osgi.identity="org.apache.httpcomponents.httpclient"]
    import: (&(osgi.wiring.package=org.apache.http.protocol)(version>=4.3.3))
     |
    export: osgi.wiring.package: org.apache.http.protocol; uses:=org.apache.http
    export: osgi.wiring.package=org.apache.http
  org.apache.httpcomponents.httpcore [osgi.identity; type="osgi.bundle"; version:Version="4.4.6.v20170210-0925"; osgi.identity="org.apache.httpcomponents.httpcore"]
	at org.eclipse.osgi.container.Module.start(Module.java:444)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1634)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1613)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1585)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1528)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.egit.ui 2 0 2019-03-01 10:30:01.982
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Rami'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:52.723
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemWa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3686
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:52.754
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemWa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3686
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:54.786
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemWa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3686
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:54.786
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemWa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3686
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3313)
	at org.eclipse.swt.widgets.Table.setItemCount(Table.java:4794)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1172)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:500)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:482)
	at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1823)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:184)
	at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:84)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:118)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:92)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:305)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:239)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:494)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:287)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:527)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:577)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:385)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:331)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:88)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1271)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1078)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1130)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1126)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1547)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4962)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:364)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4843)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:56.141
!MESSAGE Error retrieving proposal text.
Display string:
No proposals
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemW
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3685
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:56.141
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemW
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3685
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5178)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2560)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3815)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:56.954
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		system
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3684
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:44:58.877
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemW
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3685
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:45:00.330
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemWa
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3686
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:45:00.939
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		systemW
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3685
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:45:01.080
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		system
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3684
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)

!ENTRY org.eclipse.jdt.ui 4 0 2019-03-01 10:45:01.424
!MESSAGE Error retrieving proposal text.
Display string:
Enable intelligent code completion?
Pattern:
package test.java.com.ecse428.cucumber;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SendEmailWithAttachmentStepDefinitions {

	// Change this to the absolute path of the Google Chrome WebDriver executable
	static final String PATH_TO_WEBDRIVER = "C:\\Users\\Rami\\Desktop\\ECSE428\\assignment-b\\chromedriver.exe";

	private static WebDriver driver;
	private static String objectToSend;

	
	//@Given("^I am logged in to gmail on my homepage$")
	public static void givenIAmLoggedInToMyGmailOnMyHomepage() {
		
		initializeDriver();
		
		// Randomly generate an object string to send
        String alphanumeric = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder sb = new StringBuilder();
        Random rnd = new Random();
        while (sb.length() < 20) { // length of the random string.
            int index = (int) (rnd.nextFloat() * alphanumeric.length());
            sb.append(alphanumeric.charAt(index));
        }
        
        objectToSend = sb.toString();
        
		driver.get("https://mail.google.com/mail/");
		WebElement emailAddress = driver.findElement(By.name("identifier"));
		emailAddress.sendKeys("boblamar9999");
		WebElement next = driver.findElement(By.id("identifierNext"));
		next.click();
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("password"))));
		WebElement password = driver.findElement(By.name("password"));
		password.sendKeys("Boblamar_9999");
		WebElement passwordNext = driver.findElement(By.id("passwordNext"));
		passwordNext.click();	
		
		wait.until(ExpectedConditions.presenceOfElementLocated((By.className("z0"))));
		
	}
	
	//@When("^I click on compose$")
	public static void whenIClickOnCompose() {
		
		WebElement compose = driver.findElement(By.className("z0"));
		compose.click();
		
	}
	
	//@And("^I add a recipient to my message$")
	public static void andIAddARecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("boblamar9999@gmail.com");
		
	}
	
	//@And("^I add a different recipient to my message$")
	public static void andIAddADifferentRecipientToMyMessage() {
		
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.presenceOfElementLocated((By.name("to"))));
		WebElement recipient = driver.findElement(By.name("to"));
		recipient.sendKeys("rami.djema@gmail.com");
		
	}
	
	//@And("^I add a subject to my message$")
	public static void andIAddASubjectToMyMessage() {
		
		WebElement object = driver.findElement(By.name("subjectbox")); 
		object.sendKeys(objectToSend);
		
	}
	
	//@And(^I add an attachment to my message$)
	public static void andIAddAnAttachmentToMyMessage() throws Exception{
		
		WebElement attachmentButton = driver.findElement(By.xpath("//*[@class='a1 aaA aMZ']"));
		attachmentButton.click();
		syste
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: 3683
	at java.lang.String.substring(Unknown Source)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getPatternMatchRule(AbstractJavaCompletionProposal.java:919)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getStyledDisplayString(AbstractJavaCompletionProposal.java:1256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.handleSetData(CompletionProposalPopup.java:861)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$8(CompletionProposalPopup.java:844)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$3.handleEvent(CompletionProposalPopup.java:597)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4428)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1079)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1103)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Table.checkData(Table.java:1189)
	at org.eclipse.swt.widgets.Table.wmNotifyChild(Table.java:6981)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5869)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:2025)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5423)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4899)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:359)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1657)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2199)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:2454)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:587)
	at org.eclipse.swt.widgets.Table.callWindowProc(Table.java:453)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4941)
	at org.eclipse.swt.widgets.Table.windowProc(Table.java:6118)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5191)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:3333)
	at org.eclipse.swt.widgets.Table.select(Table.java:3519)
	at org.eclipse.swt.widgets.Table.setSelection(Table.java:5256)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposal(CompletionProposalPopup.java:1407)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.setProposals(CompletionProposalPopup.java:1179)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:366)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:37)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4213)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3820)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
